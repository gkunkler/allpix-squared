[Allpix] # Basic configuration fields
log_level = "INFO" # How verbose the log output will be
log_format = "DEFAULT"
detectors_file = "detector.conf" # Location of the detectors configuration file
number_of_events = 1 # Repeat the entire deposition+collection process this many times
random_seed_core = 12728099196458894486 # Sets the random seed for consistency between read and writing. Not necessary anymore 

[GeometryBuilderGeant4]
world_material = "air" # Material outside of the detector

[DepositionGeant4]
detector = "TestDetector" # Name of the detector
physics_list = FTFP_BERT_LIV # See Geant4 particle list documentation
#source_type = "macro" # Runs the following geant4 macro to generate particles
#file_name = "macro_e.mac"
source_type = "beam" # Type of geant source
particle_type = "gamma" # Type of particle to be deposited from above list
source_energy = 70KeV # Energy of the particle
beam_direction = 0 0 1 # Beam in positive z direction
source_position = 0 0 -20mm # Beam starts 20mm away from origin in z direction
number_of_particles = 1 # Number of particles (or macros) per event
max_step_length = 1um
range_cut = 1um

[ElectricFieldReader] # Generates or loads an E-field in the detector 
model = "constant" # Makes the electric field a constant value in the direction of the plates (like an ideal capacitor
bias_voltage = -200V # Potential difference between the electrodes
output_plots = 0 # Whether or not to create plots in output/data.root 
output_plots_steps = 200
output_plots_single_pixel = 0
#depletion_voltage = -200V

[WeightingPotentialReader] # Generates or loads the weighting potential for the detector
detector = "TestDetector"
#model = "pad" # Generates from first principles. Takes 100x longer than importing
model = "mesh" # Import the weighting potential from the file below
file_name = "weighting_potential3.apf"
field_mapping = "PIXEL_FULL" # See Chapter 4.5 in manual (Field Maps)
output_plots = 0

#[GenericPropagation] # Basic propagation of deposited charges to the electrodes (no transience, only final destination)
[ignore] # Causes the following parameters to be ignored since the module isn't being used
temperature = 293K
max_charge_groups = 0 # Maximum number of charge groups before it automatically increases charge_per_step (0 = no limit)
charge_per_step = 10 # Number of charges that should be grouped together (they propagate together)
integration_time = 400ns #Maximum time charges can propagate for (100ns for incomplete propagation in my case)
propagate_electrons = 1 # Whether or not to propagate the deposited electrons
propagate_holes = 0 # Whether or not to propagate the deposited holes
output_plots = 0
output_linegraphs = 0
output_plot_align_pixels = 0
#visualization = 1
# Note: max_charge_groups and integration time determine the approx. size of the output file. Don't make it too large!

[TransientPropagation] # Propagates deposted charges and generates pulse information
max_charge_groups = 100 
charge_per_step = 10
integration_time = 200ns
distance = 1 # 0 uses 1x1 grid of pixels, 1 uses 3x3 grid of pixels
timestep = 0.02ns # Runge-Kutta time step (default is 0.1)

#[SimpleTransfer] # Basic conversion from propagated charges to pixel charges by direct projection
[ignore]
detector = "TestDetector" 
max_depth_distance = 20um # Charges either hit the detector or propagate this far
#output_plots = 1

[PulseTransfer] # Uses pulse information from TransientPropagation to generate pixel data
detector = "TestDetector"
#timestep = 0.001ns
#max_depth_distance = 1um
#output_pulsegraphs = 1

#[DefaultDigitizer] # Simulates readout electronics
[ignore]
detector = "TestDetector"
threshold = 0e
threshold_smearing = 0e
electronics_noise = 0e
qdc_smearing = 0e
tdc_smearing = 0e
output_plots = 0

#[DetectorHistogrammer]
[ignore]
detector = "TestDetector"
granularity = 10,10
output = 1

#[VisualizationGeant4] # 3D plot while simulation runs
[ignore]
mode = "gui"
simple_view = false
accumulate = true
display_trajectories = true
draw_hits = true

[ROOTObjectWriter] # Writes specified objects to root file
file_name = "test_output.root" # File that will be created in output directory
include = "Deposited Charge", "PixelCharge", "PropagatedCharge", "PixelHit" # Objects to be written
#include = "PixelCharge", "PixelHit" # Objects to be written (small-sized ones only)

